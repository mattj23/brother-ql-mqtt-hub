@using BrotherQlMqttHub.Data
@using System.Diagnostics
@using BrotherQlMqttHub.ViewModels
@inject DialogService DialogService

<div class="alert alert-tag alert-secondary">
    <div>
        <button type="button" class="close" aria-label="Close" @onclick="OnClickDelete">
            <span aria-hidden="true">&times;</span>
        </button>
    </div>

    <div class="mr-4">
        <button type="button" class="btn btn-link" @onclick="ShowInlineDialog">@Tag.Name</button>
    </div>
</div>

@code {
    [Parameter]
    public ITagView Tag { get; set; }

    [Parameter]
    public EventCallback<ITagView> OnDeleteTag { get; set; }

    [Parameter]
    public EventCallback<Tuple<int, string>> OnUpdateTag { get; set; }

    private void OnClickDelete()
    {
        OnDeleteTag.InvokeAsync(Tag);
    }


    async Task ShowInlineDialog()
    {
        string newName = Tag.Name;

      var result = await DialogService.OpenAsync("Edit Tag Name", ds => 
          @<div class="container"> 
              <div class="row justify-content-start">
                  <div class="col m-2">
                      <RadzenTextBox @bind-Value="newName" /> 
                  </div>
              </div>

              <div class="row justify-content-end"> 
                  <div class="col m-2"> 
                      <RadzenButton Text="Ok" Click="() => ds.Close(true)" ButtonStyle="ButtonStyle.Primary" /> 
                      <RadzenButton Text="Cancel" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" /> 
                  </div> 
              </div> 
          </div>);

        if (result is bool b && b)
        {
            await OnUpdateTag.InvokeAsync(Tuple.Create(Tag.Id, newName));
        }
    }
}
