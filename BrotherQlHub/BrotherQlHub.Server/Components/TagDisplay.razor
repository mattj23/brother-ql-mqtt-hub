@using System.Diagnostics
@using BrotherQlHub.Server.Services
@using BrotherQlHub.Server.ViewModels
@inject IDialogService _dialogs
@inject CategoryManager _categories

<MudChip Color="Color.Info"
         OnClick="ShowInlineDialog"
         OnClose="OnClickDelete">
    @Tag.Name
</MudChip>

@code {

    [Parameter]
    public ITagView Tag { get; set; } = null!;

    [Parameter]
    public EventCallback<ITagView> OnDeleteTag { get; set; }

    [Parameter]
    public EventCallback<Tuple<int, string>> OnUpdateTag { get; set; }

    private void OnClickDelete()
    {
        OnDeleteTag.InvokeAsync(Tag);
    }


    async Task ShowInlineDialog()
    {
        var parameters = new DialogParameters { ["ToEdit"] = Tag };
        var dialog = _dialogs.Show<TagDialog>("Edit Tag", parameters);
        var result = await dialog.Result;
        if (result.Cancelled) return;

        var info = result.Data as TagDialog.Result;
        await _categories.UpdateTag(Tag.Id, info.Name);
    }
}
